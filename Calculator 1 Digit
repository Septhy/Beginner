from tkinter import *
from tkinter import ttk

#Setting up the Frame
root = Tk()

# Define Functions
def Add():
    print("Meow")
def Des():
    print("Meow")

Entity1=0
Entity2=0
Results = 0

Add=False
Subtract=False
Multiply2=False
Divide2=False


# GUI Layout

#Variables
Count1=0
Count2=0
Outcome=IntVar()
Outcome.set(Count1+Count2)

#Labels
Results=ttk.Label(root, text=Outcome.get())

#Entry Slots
Entry1=ttk.Entry(root)
Entry2=ttk.Entry(root)

#Commands
def One():
 global Count1
 global Count2
 global Add
 global Subtract
 global Multiply2
 global Divide2
 if Count1==0:
    Count1 =1
    Outcome.set(Count1+Count2)
    Results.configure(text=Outcome.get())
 if Count1>=1 & Add==True:
    Count2=1
    Outcome.set(Count1+Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Add=False
 if Count1>=1 & Subtract==True:
    Count2=1
    Outcome.set(Count1-Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Subtract=False
 if Count1>=1 & Multiply2==True:
    Count2=1
    Outcome.set(Count1*Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Multiply2=False
 if Count1>=1 & Divide2==True:
    Count2=1
    Outcome.set(Count1/Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Divide2=False


def Two():
 global Count1
 global Count2
 global Add
 global Subtract
 global Multiply2
 global Divide2
 if Count1==0:
    Count1 =2
    Outcome.set(Count1+Count2)
    Results.configure(text=Outcome.get())
 if Count1>=1 & Add==True:
    Count2=2
    Outcome.set(Count1+Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Add=False
 if Count1>=1 & Subtract==True:
    Count2=2
    Outcome.set(Count1-Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Subtract=False
 if Count1>=1 & Multiply2==True:
    Count2=2
    Outcome.set(Count1*Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Multiply2=False
 if Count1>=1 & Divide2==True:
    Count2=2
    Outcome.set(Count1/Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Divide2=False

def Three():
 global Count1
 global Count2
 global Add
 global Subtract
 global Multiply2
 global Divide2
 if Count1==0:
    Count1 =3
    Outcome.set(Count1+Count2)
    Results.configure(text=Outcome.get())
 if Count1>=1 & Add==True:
    Count2=3
    Outcome.set(Count1+Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Add=False
 if Count1>=1 & Subtract==True:
    Count2=3
    Outcome.set(Count1-Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Subtract=False
 if Count1>=1 & Multiply2==True:
    Count2=3
    Outcome.set(Count1*Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Multiply2=False
 if Count1>=1 & Divide2==True:
    Count2=3
    Outcome.set(Count1/Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Divide2=False

def Four():
 global Count1
 global Count2
 global Add
 global Subtract
 global Multiply2
 global Divide2
 if Count1==0:
    Count1 =4
    Outcome.set(Count1+Count2)
    Results.configure(text=Outcome.get())
 if Count1>=1 & Add==True:
    Count2=4
    Outcome.set(Count1+Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Add=False
 if Count1>=1 & Subtract==True:
    Count2=4
    Outcome.set(Count1-Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Subtract=False
 if Count1>=1 & Multiply2==True:
    Count2=4
    Outcome.set(Count1*Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Multiply2=False
 if Count1>=1 & Divide2==True:
    Count2=4
    Outcome.set(Count1/Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Divide2=False

def Five():
 global Count1
 global Count2
 global Add
 global Subtract
 global Multiply2
 global Divide2
 if Count1==0:
    Count1 =5
    Outcome.set(Count1+Count2)
    Results.configure(text=Outcome.get())
 if Count1>=1 & Add==True:
    Count2=5
    Outcome.set(Count1+Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Add=False
 if Count1>=1 & Subtract==True:
    Count2=5
    Outcome.set(Count1-Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Subtract=False
 if Count1>=1 & Multiply2==True:
    Count2=5
    Outcome.set(Count1*Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Multiply2=False
 if Count1>=1 & Divide2==True:
    Count2=5
    Outcome.set(Count1/Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Divide2=False

def Six():
 global Count1
 global Count2
 global Add
 global Subtract
 global Multiply2
 global Divide2
 if Count1==0:
    Count1 =6
    Outcome.set(Count1+Count2)
    Results.configure(text=Outcome.get())
 if Count1>=1 & Add==True:
    Count2=6
    Outcome.set(Count1+Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Add=False
 if Count1>=1 & Subtract==True:
    Count2=6
    Outcome.set(Count1-Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Subtract=False
 if Count1>=1 & Multiply2==True:
    Count2=6
    Outcome.set(Count1*Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Multiply2=False
 if Count1>=1 & Divide2==True:
    Count2=6
    Outcome.set(Count1/Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Divide2=False

def Seven():
 global Count1
 global Count2
 global Add
 global Subtract
 global Multiply2
 global Divide2
 if Count1==0:
    Count1 =7
    Outcome.set(Count1+Count2)
    Results.configure(text=Outcome.get())
 if Count1>=1 & Add==True:
    Count2=7
    Outcome.set(Count1+Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Add=False
 if Count1>=1 & Subtract==True:
    Count2=7
    Outcome.set(Count1-Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Subtract=False
 if Count1>=1 & Multiply2==True:
    Count2=7
    Outcome.set(Count1*Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Multiply2=False
 if Count1>=1 & Divide2==True:
    Count2=7
    Outcome.set(Count1/Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Divide2=False

def Eight():
 global Count1
 global Count2
 global Add
 global Subtract
 global Multiply2
 global Divide2
 if Count1==0:
    Count1 =8
    Outcome.set(Count1+Count2)
    Results.configure(text=Outcome.get())
 if Count1>=1 & Add==True:
    Count2=8
    Outcome.set(Count1+Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Add=False
 if Count1>=1 & Subtract==True:
    Count2=8
    Outcome.set(Count1-Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Subtract=False
 if Count1>=1 & Multiply2==True:
    Count2=8
    Outcome.set(Count1*Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Multiply2=False
 if Count1>=1 & Divide2==True:
    Count2=8
    Outcome.set(Count1/Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Divide2=False

def Nine():
 global Count1
 global Count2
 global Add
 global Subtract
 global Multiply2
 global Divide2
 if Count1==0:
    Count1 =9
    Outcome.set(Count1+Count2)
    Results.configure(text=Outcome.get())
 if Count1>=1 & Add==True:
    Count2=9
    Outcome.set(Count1+Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Add=False
 if Count1>=1 & Subtract==True:
    Count2=9
    Outcome.set(Count1-Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Subtract=False
 if Count1>=1 & Multiply2==True:
    Count2=9
    Outcome.set(Count1*Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Multiply2=False
 if Count1>=1 & Divide2==True:
    Count2=9
    Outcome.set(Count1/Count2)
    Results.configure(text=Outcome.get())
    Count1=0
    Count2=0
    Divide2=False


def Plus():
 global Add
 global Subtract
 global Divide2
 global Multiply2
 Add=True
 Subtract=False
 Divide2=False
 Multiply2=False

def Minus():
 global Add
 global Subtract
 global Divide2
 global Multiply2
 Add=False
 Subtract=True
 Divide2=False
 Multiply2=False

def Multiply():
 global Add
 global Subtract
 global Divide2
 global Multiply2
 Add=False
 Subtract=False
 Divide2=False
 Multiply2=True

def Divide():
 global Add
 global Subtract
 global Divide2
 global Multiply2
 Divide2=True
 Subtract=False
 Add=False
 Multiply2=False

#Buttons
a1=ttk.Button(root, text ="1",width=2, command=One)
a2=ttk.Button(root, text ="2",width=2, command=Two)
a3=ttk.Button(root, text ="3",width=2, command=Three)
a4=ttk.Button(root, text ="4",width=2, command=Four)
a5=ttk.Button(root, text ="5",width=2, command=Five)
a6=ttk.Button(root, text ="6",width=2, command=Six)
a7=ttk.Button(root, text ="7",width=2, command=Seven)
a8=ttk.Button(root, text ="8",width=2, command=Eight)
a9=ttk.Button(root, text ="9",width=2, command=Nine)
aplus=ttk.Button(root, text ="+",width=2, command=Plus)
aminus=ttk.Button(root, text ="-",width=2, command=Minus)
adivide=ttk.Button(root, text ="/",width=2, command=Divide)
amulti=ttk.Button(root, text ="*",width=2, command=Multiply)

#Grid Location of GUI
#Upper Grid
Results.grid(row=2, column=1, pady=1)


# Lower Grid
adivide.grid(row=9, column=4, pady=1)
a1.grid(row=8, column=1, pady=1)
a2.grid(row=8, column=2, pady=1)
a3.grid(row=8, column=3, pady=1)
aplus.grid(row=8, column=4, pady=1)
a4.grid(row=7, column=1, pady=1)
a5.grid(row=7, column=2, pady=1)
a6.grid(row=7, column=3, pady=1)
aminus.grid(row=7, column=4, pady=1)
a7.grid(row=6, column=1, pady=1)
a8.grid(row=6, column=2, pady=1)
a9.grid(row=6, column=3, pady=1)
amulti.grid(row=6, column=4, pady=1)


root.update_idletasks()
root.mainloop()
